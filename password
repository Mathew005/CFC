<?php
// password.php

include_once 'db_init.php';
include_once 'db_util.php';

if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['userId'], $_POST['userType'], $_POST['oldPassword'])) {
    $userId = filter_var($_POST['userId'], FILTER_SANITIZE_NUMBER_INT);
    $userType = filter_var($_POST['userType'], FILTER_SANITIZE_STRING);
    $oldPassword = $_POST['oldPassword'];

    // Determine the correct table and password column based on user type
    if ($userType === 'organizer') {
        $table = 'Organizers';
        $passwordColumn = 'OrganizerPassword';
    } elseif ($userType === 'participant') {
        $table = 'Participants';
        $passwordColumn = 'ParticipantPassword';
    } else {
        http_response_code(400);
        echo json_encode(['error' => 'Invalid user type']);
        exit;
    }

    // Fetch the stored password for the given user ID
    $data = get_data($table, $userType === 'organizer' ? 'OrganizerID' : 'ParticipantID', $userId);

    if ($data) {
        // Verify the old password (assuming passwords are hashed)
        if (password_verify($oldPassword, $data[$passwordColumn])) {
            echo json_encode(['success' => true, 'message' => 'Password verification successful']);
        } else {
            http_response_code(401);
            echo json_encode(['error' => 'Old password is incorrect']);
        }
    } else {
        http_response_code(404);
        echo json_encode(['error' => 'User not found']);
    }
} else {
    http_response_code(400);
    echo json_encode(['error' => 'Invalid request']);
}
?>